apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cassandra.fullname" . }}
  labels:
    {{- include "cassandra.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "cassandra.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cassandra.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "cassandra.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: cassandra
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 7000
              name: intra-node
            - containerPort: 7001
              name: tls-intra-node
            - containerPort: 7199
              name: jmx
            - containerPort: 9042
              name: cql
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - nodetool drain
          env:
            - name: CASSANDRA_SEEDS
              value: "{{ include "cassandra.fullname" . }}-0.{{ include "cassandra.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local"
            - name: MAX_HEAP_SIZE
              value: {{ .Values.jvm.heapSize }}
            - name: HEAP_NEWSIZE
              value: "200M"
            - name: CASSANDRA_SEEDS
              value: "{{ include "cassandra.fullname" . }}-0.{{ include "cassandra.fullname" . }}"
            - name: CASSANDRA_CLUSTER_NAME
              value: {{ .Values.cluster.name }}
            - name: CASSANDRA_DC
              value: {{ .Values.cluster.dc }}
            - name: CASSANDRA_RACK
              value: {{ .Values.cluster.rack }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            {{- if .Values.auth.enabled }}
            - name: CASSANDRA_AUTHENTICATOR
              value: "PasswordAuthenticator"
            - name: CASSANDRA_AUTHORIZER
              value: "CassandraAuthorizer"
            - name: CASSANDRA_ROLE_MANAGER
              value: "CassandraRoleManager"
            {{- else }}
            - name: CASSANDRA_AUTHENTICATOR
              value: "AllowAllAuthenticator"
            - name: CASSANDRA_AUTHORIZER
              value: "AllowAllAuthorizer"
            {{- end }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "if [[ $(nodetool status | grep $POD_IP) == *\"UN\"* ]]; then exit 0; else exit 1; fi"
            initialDelaySeconds: 15
            timeoutSeconds: 5
          volumeMounts:
            - name: cassandra-data
              mountPath: /var/lib/cassandra
            {{- if .Values.auth.enabled }}
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.auth.enabled }}
      volumes:
        - name: init-script
          configMap:
            name: {{ include "cassandra.fullname" . }}-init
            defaultMode: 0755
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: cassandra-data
        labels:
          {{- include "cassandra.labels" . | nindent 10 }}
      spec:
        accessModes: 
          - {{ .Values.persistence.accessMode }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
  {{- else }}
      volumes:
        - name: cassandra-data
          emptyDir: {}
  {{- end }}

{{- if .Values.auth.enabled }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cassandra.fullname" . }}-init
  labels:
    {{- include "cassandra.labels" . | nindent 4 }}
data:
  init.sh: |
    #!/bin/bash
    
    # Wait for Cassandra to be ready
    until cqlsh -e "describe keyspaces" > /dev/null 2>&1; do
      echo "Waiting for Cassandra to start..."
      sleep 10
    done
    
    # Change default password
    cqlsh -u cassandra -p cassandra -e "ALTER ROLE cassandra WITH PASSWORD = '{{ .Values.auth.superuser.password }}';" || true
    
    # Increase replication factor for system_auth keyspace
    cqlsh -u {{ .Values.auth.superuser.username }} -p {{ .Values.auth.superuser.password }} -e "ALTER KEYSPACE system_auth WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};" || true
    
    echo "Authentication setup completed"
{{- end }}